openapi: 3.0.0
info:
  title: One API Service
  version: 1.0.1
  description: The API for the One data integration service.
servers:
  - url: https://ymlimz1bx0.execute-api.ap-southeast-2.amazonaws.com/prod
    description: Test server
paths:
  /v1/auth/login:
    parameters: []
    post:
      summary: Login to the API
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: Your access token
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorised'
        "500":
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                clientId:
                  type: string
                clientSecret:
                  type: string
              required:
                - clientId
                - clientSecret
              example:
                clientId: sys1
                clientSecret: mysecret
  /v1/matters/upsert:
    post:
      summary: Adds or updates a Matter to be synchronised.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  oneId:
                    type: string
                    example: "M#sys1#1234" 
                  message:
                    type: string
                    example: Matter upserted
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorised'
        "500":
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "1234"
                  description: >
                    The id of the matter in your system.
                oneId:
                  type: string
                  example: "M#sys1#1234"
                  description: >
                    The oneId of the matter. 
                    This is not mandatory (you will not have one if the matter has not
                    been added to the One system yet).
                matterType:
                  type: string
                  example: 54330de2-4f20-4d73-bdb1-e891560b9176
                  description: >
                    The id of the matter type in your system.
                    This matter type will be mapped to an id in the One system if a mapping exists.
                name:
                  type: string
                  example: Matter name
                  description: >
                    The name of the matter.
                data:
                  type: object
                  properties: {}
                  description: >
                    Any matter data.
              required:
                - id
                - name
                - matterType
              example:
                id: 1234
                oneId: M#sys1#1234
                matterType: 54330de2-4f20-4d73-bdb1-e891560b9176
                name: Matter Name
                data: {}
  /v1/clients/upsert:
    post:
      summary: Adds or updates a client to be synchronised.
      security:
        - bearerAuth: []
      responses:
        "200":
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  oneId:
                    type: string
                    description: |
                        One Id of the saved record.
                    example: C#sys1#9876
                  message:
                    type: string
                    example: Client upserted
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorised'
        "500":
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                oneId:
                  type: string
                name:
                  type: string
                data:
                  type: object
                  properties: {}
              required:
                - id
                - name
              example:
                id: 9876
                oneId: C#sys1#9876
                name: Client Name
                data: {}

  /v1/matters/receive:
    parameters: []
    post:
      summary: Get a list of Matters that don't exist in your database.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                    items:
                        type: array
                        items: 
                            type: object
                            description: |
                                All matters that have a sequence number larger than the 
                                lastSequenceNumber passed in the request.
                            properties:
                                id:
                                    type: string
                                oneId:
                                    type: string
                                data:
                                    type: object
                                    additionalProperties: true
                                matterType:
                                    type: string
                                sequenceNumber:
                                    type: number
                    lastSequenceNumber:
                        type: number
                        description: |
                            The largest sequence number of a matter in the returned list of matters.
                            This can be stored and passed to the next call of /v1/matters/receive to get 
                            any matters that have been modified. 
              example:
                items:
                  - id: 1234
                    oneId: M#sys1#1234
                    data: {}
                    matterType: 54330de2-4f20-4d73-bdb1-e891560b9176
                    sequenceNumber: 1001
                  - id: 5678
                    oneId: M#sys1#5678
                    data: {}
                    matterType: 698f2602-897f-4e5b-8494-8c69a3a47dcf
                    sequenceNumber: 1002
                lastSequenceNumber: 1002
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorised'
        "500":
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lastSequenceNumber:
                  type: number
                  description: |
                    The request will return any matters with a sequence number larger than this.
                    If lastSequenceNumber is not passed all matters will be returned.
              example:
                lastSequenceNumber: 1000
  /v1/clients/receive:
    parameters: []
    post:
      summary: Get a list of Clients that don't exist in your database.
      security:
        - bearerAuth: []
      responses:
        "200":
          headers:
            Content-Type:
              schema:
                type: string
              example: application/json
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                    items:
                        type: array
                        items: 
                            type: object
                            properties:
                                id:
                                    type: string
                                oneId:
                                    type: string
                                data:
                                    type: object
                                    additionalProperties: true
                                sequenceNumber:
                                    type: number
                    lastSequenceNumber:
                        type: number
                        description: |
                            The largest sequence number of a client in the returned list of clients.
                            This can be stored and passed to the next call of /v1/clients/receive to get 
                            any clients that have been modified. 
              example:
                items:
                  - id: 1234
                    oneId: C#sys1#1234
                    data: {}
                    sequenceNumber: 1001
                  - id: 5678
                    oneId: C#sys1#5678
                    data: {}
                    sequenceNumber: 1002
                lastSequenceNumber: 1002
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorised'
        "500":
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lastSequenceNumber:
                  type: number
                  description: |
                    The request will return any clients with a sequence number larger than this.
                    If lastSequenceNumber is not passed all clients will be returned.
              example:
                lastSequenceNumber: 1000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Unauthorised:
      description: Unauthorised
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Unauthorised
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Bad request
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal server error
